(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{408:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-js"}},[s._v("#")]),s._v(" 1.js")]),s._v(" "),t("h3",{attrs:{id:"_1-说一说js数据类型有哪些-区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-说一说js数据类型有哪些-区别是什么"}},[s._v("#")]),s._v(" 1.说一说JS数据类型有哪些,区别是什么？")]),s._v(" "),t("p",[t("code",[s._v("答：有8种：Number String Boolean Symbol Null Undefind Object BigInt")])]),s._v(" "),t("ul",[t("li",[s._v("标准回答：")])]),s._v(" "),t("blockquote",[t("p",[s._v("​\tjs数据类型分为两种，基本数据类型和引用数据类型。基本数据类型，也叫简单数据类型，包含7种类型，分别为：number,string,boolean,bigint,null,undefined,sympbol;引用数据类型也叫复杂数据类型，通常用Object代表，普通对象，数组，函数，正则，日期，Math数学函数等都属于Object；")]),s._v(" "),t("p",[s._v("​\t数据类型分为两大类的本质区别：他们在内存中的存储方式不同。基本数据类型是直接存储在栈中的简单数据段，占据空间小，属于被频繁使用的数据。引用数据类型是存储在堆内存中，占据空间大。引用数据类型在栈中存储了指针，指向堆中该实体的起始地址，当解释器寻找引用值时，会检索其在栈中的地址，取得地址后从堆中获得实体。")])]),s._v(" "),t("ul",[t("li",[s._v("加分回答")])]),s._v(" "),t("blockquote",[t("p",[s._v("​\tSymbol是ES6新出的一种数据类型，这种数据类型的特点就是没有重复的数据，可以作为object的key。\n​\t数据的创建方法Symbol()，因为它的构造函数不够完整，所以不能使用new Symbol()创建数据。由于Symbol()创建数据具有唯一性，所以 Symbol() !== Symbol(), 同时使用Symbol数据作为key不能使用for获取到这个key，需要使用Object.getOwnPropertySymbols(obj)获得这个obj对象中key类型是Symbol的key值。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let key = Symbol('key');\nlet obj = { [key]: 'symbol'};\nlet keyArray = Object.getOwnPropertySymbols(obj); // 返回一个数组[Symbol('key')]\nobj[keyArray[0]] // 'symbol'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("​\tBigInt也是ES6新出的一种数据类型，这种数据类型的特点就是数据涵盖的范围大，能够解决超出普通数据类型范围报错的问题。使用方法：（注意：BigInt和Number之间不能进行混合操作）")]),s._v(" "),t("ul",[t("li",[s._v("整数末尾直接+n：647326483767797n")]),s._v(" "),t("li",[s._v('调用BigInt()构造函数：BigInt("647326483767797")')])])]),s._v(" "),t("h3",{attrs:{id:"_2-说一说js实现异步的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-说一说js实现异步的方法"}},[s._v("#")]),s._v(" 2.说一说JS实现异步的方法？")]),s._v(" "),t("p",[t("code",[s._v("得分点：回调函数，事件监听，setTimeout，Promise，生成器Generators/yield，async/awt")])]),s._v(" "),t("ul",[t("li",[s._v("标准回答")])]),s._v(" "),t("blockquote",[t("p",[s._v("所有异步任务都是在同步任务执行结束之后，从任务队列中依次取出执行。")]),s._v(" "),t("ul",[t("li",[s._v("回调函数是异步操作最基本的方法,比如ajax的回调。回调函数的优点是简单容易理解和实现，缺点是不利于代码的阅读和维护，各个部分之间高度耦合，使得程序结构混乱，流程难以追踪(尤其是多个回调函数嵌套的情况)，而且每个任务只能指定一个回调函数。此外他不能通过try catch捕获错误，不能直接return Promise")])])]),s._v(" "),t("h3",{attrs:{id:"_3-说一说js变量提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-说一说js变量提升"}},[s._v("#")]),s._v(" 3.说一说JS变量提升？")]),s._v(" "),t("p",[t("code",[s._v("得分点:var声明的变量会有变量提升、函数声明也会提升、let和const变量不提升")])]),s._v(" "),t("ul",[t("li",[s._v("标准回答")])]),s._v(" "),t("blockquote",[t("p",[s._v("变量提升是指js的变量和函数声明会在代码编译期，提升到代码的最前面。变量提升成立的前提是使用var关键字进行声明的变量，并且变量提升的时候只有声明被提升，赋值并不会被提升，同时函数的声明提升会比变量的提升优先。变量提升的结果，可以在变量初始化之前访问该变量，返回的是undefined。在函数声明前可以调用该函数。")])]),s._v(" "),t("ul",[t("li",[s._v("加分回答")])]),s._v(" "),t("blockquote",[t("p",[s._v("let/const 提供了块级作用域。使用let和const声明的变量是创建提升，形成暂时性死区，在初始化之前访问let和const创建的变量会报错")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_43846071/article/details/99702330?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3.pc_relevant_antiscanv2&utm_relevant_index=4",target:"_blank",rel:"noopener noreferrer"}},[s._v("JS 暂时性死区_哎哟喂呀-的博客-CSDN博客_js 暂时性死区"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"_4-说一说js继承的方法和优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-说一说js继承的方法和优缺点"}},[s._v("#")]),s._v(" 4.说一说js继承的方法和优缺点？")]),s._v(" "),t("h3",{attrs:{id:"_5-instanceof是如何判断的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-instanceof是如何判断的"}},[s._v("#")]),s._v(" 5.instanceof是如何判断的?")]),s._v(" "),t("p",[s._v("* 表达式: A instanceof B")]),s._v(" "),t("p",[s._v("​      A是实例对象有隐式原型__propto，B是构造函数有显式原型prototype")]),s._v(" "),t("p",[s._v("* 原理：如果B函数的显式原型对象在A对象的原型链上, 返回true, 否则返回false")]),s._v(" "),t("h3",{attrs:{id:"_6-事件循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-事件循环"}},[s._v("#")]),s._v(" 6.事件循环")]),s._v(" "),t("h3",{attrs:{id:"_7-数组的常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-数组的常用方法"}},[s._v("#")]),s._v(" 7.数组的常用方法")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/5842e560-67b6-11eb-85f6-6fac77c0c9b3.png",alt:"img"}})]),s._v(" "),t("h4",{attrs:{id:"一-操作方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-操作方法"}},[s._v("#")]),s._v(" 一.操作方法")]),s._v(" "),t("blockquote",[t("p",[s._v("需要留意的是哪些方法会对原数组产生影响")])]),s._v(" "),t("h5",{attrs:{id:"增"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[s._v("#")]),s._v(" 增")]),s._v(" "),t("p",[t("strong",[s._v("前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响")])]),s._v(" "),t("ul",[t("li",[s._v("push()")])]),s._v(" "),t("p",[t("code",[s._v("push()")]),s._v("方法接收任意数量的参数，并将它们添加到"),t("strong",[s._v("数组末尾")]),s._v("，返回数组的最新长度")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = []; // 创建一个数组\nlet count = colors.push("red", "green"); // 推入两项\nconsole.log(count) // 2\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("unshift()")])]),s._v(" "),t("p",[s._v("unshift()在"),t("strong",[s._v("数组开头")]),s._v("添加任意多个值，然后"),t("strong",[s._v("返回新的数组长度")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = new Array(); // 创建一个数组\nlet count = colors.unshift("red", "green"); // 从数组开头推入两项\nalert(count); // 2\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("splice()")])]),s._v(" "),t("p",[s._v("传入"),t("strong",[s._v("三个参数")]),s._v("，分别是"),t("strong",[s._v("开始位置、0（要删除的元素数量）、插入的元素")]),s._v("，"),t("strong",[s._v("返回空数组")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(1, 0, "yellow", "orange")\nconsole.log(colors) // red,yellow,orange,green,blue\nconsole.log(removed) // []\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("concat():"),t("strong",[s._v("不会影响原始数组")])])]),s._v(" "),t("p",[s._v("首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后"),t("strong",[s._v("返回这个新构建的数组")]),s._v("，"),t("strong",[s._v("不会影响原始数组")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = ["red", "green", "blue"];\nlet colors2 = colors.concat("yellow", ["black", "brown"]);\nconsole.log(colors); // ["red", "green","blue"]\nconsole.log(colors2); // ["red", "green", "blue", "yellow", "black", "brown"]\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"删"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[s._v("#")]),s._v(" 删")]),s._v(" "),t("p",[s._v("下面三种都会影响原数组，最后一项不影响原数组：")]),s._v(" "),t("ul",[t("li",[s._v("pop()")])]),s._v(" "),t("p",[t("code",[s._v("pop()")]),s._v(" 方法用于"),t("strong",[s._v("删除数组的最后一项")]),s._v("，同时**减少数组的"),t("code",[s._v("length")]),s._v(" **值，"),t("strong",[s._v("返回被删除的项")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" colors "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"green"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" colors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取得最后一项")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// green")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("shift()")])]),s._v(" "),t("p",[t("code",[s._v("shift()")]),s._v("方法用于"),t("strong",[s._v("删除数组的第一项")]),s._v("，同时"),t("strong",[s._v("减少数组的"),t("code",[s._v("length")]),s._v(" 值")]),s._v("，"),t("strong",[s._v("返回被删除的项")])]),s._v(" "),t("ul",[t("li",[s._v("splice()")])]),s._v(" "),t("p",[s._v("传入"),t("strong",[s._v("两个参数，分别是开始位置，删除元素的数量")]),s._v("，"),t("strong",[s._v("返回包含删除元素的数组")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(0,1); // 删除第一项\nconsole.log(colors); // green,blue\nconsole.log(removed); // red，只有一个元素的数组\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("slice()："),t("strong",[s._v("不影响原数组")])])]),s._v(" "),t("p",[s._v("slice() 方法选择从给定的 "),t("em",[s._v("start")]),s._v(" 参数开始的元素，并在给定的 "),t("em",[s._v("end")]),s._v(" 参数处结束，但不包括"),t("em",[s._v("end")]),s._v("。返回删除后的新数组")]),s._v(" "),t("p",[t("strong",[s._v("通过索引位置获取新的数组，该方法不会修改原数组，只是返回一个新的子数组。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = ["red", "green", "blue", "yellow", "purple"];\nlet colors2 = colors.slice(1);\nlet colors3 = colors.slice(1, 4);\nconsole.log(colors)   // red,green,blue,yellow,purple\nconcole.log(colors2); // green,blue,yellow,purple\nconcole.log(colors3); // green,blue,yellow\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h5",{attrs:{id:"改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[s._v("#")]),s._v(" 改")]),s._v(" "),t("p",[s._v("即修改原来数组的内容，常用"),t("code",[s._v("splice")])]),s._v(" "),t("p",[t("strong",[s._v("splice()")])]),s._v(" "),t("p",[s._v("传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(1, 1, "red", "purple"); // 插入两个值，删除一个元素\nconsole.log(colors); // red,red,purple,blue\nconsole.log(removed); // green，只有一个元素的数组\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("查")])]),s._v(" "),t("p",[s._v("即查找元素，返回元素坐标或者元素值")]),s._v(" "),t("ul",[t("li",[s._v("indexOf()")])]),s._v(" "),t("p",[s._v("返回要查找的元素在数组中的"),t("strong",[s._v("位置")]),s._v("，如果没找到则返回 -1")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nnumbers.indexOf(4) // 3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("includes()")])]),s._v(" "),t("p",[s._v("返回要查找的元素在数组中的位置，找到返回"),t("code",[s._v("true")]),s._v("，否则"),t("code",[s._v("false")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nnumbers.includes(4) // true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("find()")])]),s._v(" "),t("p",[s._v("返回第一个匹配的元素")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('const people = [\n    {\n        name: "Matt",\n        age: 27\n    },\n    {\n        name: "Nicholas",\n        age: 29\n    }\n];\npeople.find((element, index, array) => element.age < 28) // // {name: "Matt", age: 27}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"二-排序方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-排序方法"}},[s._v("#")]),s._v(" 二.排序方法")]),s._v(" "),t("h5",{attrs:{id:"_1-reverse-将数组元素方向反转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-reverse-将数组元素方向反转"}},[s._v("#")]),s._v(" 1.reverse():将数组元素方向反转")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" values "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nvalues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reverse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5,4,3,2,1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"_2-sort-接受一个比较函数-用于判断哪个值应该排在前面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-sort-接受一个比较函数-用于判断哪个值应该排在前面"}},[s._v("#")]),s._v(" 2.sort()：接受一个比较函数，用于判断哪个值应该排在前面")]),s._v(" "),t("p",[s._v("默认情况下，"),t("code",[s._v("sort()")]),s._v(" 方法将按字母和升序将值作为字符串进行排序。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_sort.asp",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript Array sort() 方法 (w3school.com.cn)"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" value2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" value2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" values "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nvalues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compare"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0,1,5,10,15")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h4",{attrs:{id:"三-转换方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-转换方法"}},[s._v("#")]),s._v(" 三.转换方法")]),s._v(" "),t("p",[s._v("join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" colors "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"green"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// red,green,blue")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"||"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// red||green||blue")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"四-迭代方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-迭代方法"}},[s._v("#")]),s._v(" 四.迭代方法")]),s._v(" "),t("p",[s._v("常用来迭代数组的方法（都不改变原数组）有如下：")]),s._v(" "),t("ul",[t("li",[s._v("some()")])]),s._v(" "),t("p",[s._v("some() 方法用于检测数组中的元素是否满足指定条件（函数提供）。")]),s._v(" "),t("p",[s._v("some() 方法会依次执行数组的每个元素：")]),s._v(" "),t("ul",[t("li",[s._v("如果有一个元素满足条件，则表达式返回"),t("em",[s._v("true")]),s._v(" , 剩余的元素不会再执行检测。")]),s._v(" "),t("li",[s._v("如果没有满足条件的元素，则返回false。")])]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" some() 不会对空数组进行检测。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" some() 不会改变原始数组。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" someResult "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("some")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("every()")])]),s._v(" "),t("p",[s._v("every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供）。")]),s._v(" "),t("p",[s._v("every() 方法使用指定函数检测数组中的所有元素：")]),s._v(" "),t("ul",[t("li",[s._v("如果数组中检测到有一个元素不满足，则整个表达式返回 "),t("em",[s._v("false")]),s._v(" ，且剩余的元素不会再进行检测。")]),s._v(" "),t("li",[s._v("如果所有元素都满足条件，则返回 true。")])]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" every() 不会对空数组进行检测。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" every() 不会改变原始数组。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" everyResult "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("every")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("everyResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("forEach()")])]),s._v(" "),t("p",[s._v("forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数。")]),s._v(" "),t("p",[t("strong",[s._v("注意:")]),s._v(" forEach() 对于空数组是不会执行回调函数的。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行某些操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("filter()")])]),s._v(" "),t("p",[s._v("filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" filter() 不会对空数组进行检测。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" filter() 不会改变原始数组。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" filterResult "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filterResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3,4,5,4,3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("map()")])]),s._v(" "),t("p",[s._v("map() 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。")]),s._v(" "),t("p",[s._v("map() 方法按照原始数组元素顺序依次处理元素。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" map() 不会对空数组进行检测。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" map() 不会改变原始数组。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" mapResult "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mapResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2,4,6,8,10,8,6,4,2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_8-字符串的常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-字符串的常用方法"}},[s._v("#")]),s._v(" 8.字符串的常用方法")]),s._v(" "),t("h4",{attrs:{id:"一、操作方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、操作方法"}},[s._v("#")]),s._v(" 一、操作方法")]),s._v(" "),t("h3",{attrs:{id:"_9-javascript-中的类型转换机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-javascript-中的类型转换机制"}},[s._v("#")]),s._v(" 9. JavaScript 中的类型转换机制")]),s._v(" "),t("h4",{attrs:{id:"一、概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、概述"}},[s._v("#")]),s._v(" 一、概述")]),s._v(" "),t("p",[s._v("我们在声明的时候只有一种数据类型，只有到运行期间才会确定当前类型")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let x = y ? 1 : a;\n\n上面代码中，x的值在编译阶段是无法获取的，只有等到程序运行时才能知道\n\n虽然变量的数据类型是不确定的，但是各种运算符对数据类型是有要求的，如果运算子的类型与预期不符合，就会触发类型转换机制\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("常见的类型转换有：")]),s._v(" "),t("ul",[t("li",[s._v("强制转换（显示转换）")]),s._v(" "),t("li",[s._v("自动转换（隐式转换）")])]),s._v(" "),t("h4",{attrs:{id:"二、显示转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、显示转换"}},[s._v("#")]),s._v(" 二、显示转换")]),s._v(" "),t("ul",[t("li",[s._v("Number()")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510202743116.png",alt:"image-20220510202743116"}})]),s._v(" "),t("ul",[t("li",[s._v("parseInt()")])]),s._v(" "),t("p",[t("code",[s._v("parseInt")]),s._v("相比，就没那么严格了，函数逐个解析字符，遇到不能转换的字符就停下来")]),s._v(" "),t("ul",[t("li",[s._v("String()")])]),s._v(" "),t("p",[s._v("可以将任意类型的值转化成字符串")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510202838148.png",alt:"image-20220510202838148"}})]),s._v(" "),t("ul",[t("li",[s._v("Boolean()")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510202845810.png",alt:"image-20220510202845810"}})]),s._v(" "),t("h4",{attrs:{id:"三、隐式转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、隐式转换"}},[s._v("#")]),s._v(" 三、隐式转换")]),s._v(" "),t("p",[s._v("何时发生隐式转换？")]),s._v(" "),t("p",[s._v("我们这里可以归纳为两种情况发生隐式转换的场景：")]),s._v(" "),t("ul",[t("li",[s._v("比较运算（"),t("code",[s._v("==")]),s._v("、"),t("code",[s._v("!=")]),s._v("、"),t("code",[s._v(">")]),s._v("、"),t("code",[s._v("<")]),s._v("）、"),t("code",[s._v("if")]),s._v("、"),t("code",[s._v("while")]),s._v("需要布尔值地方")]),s._v(" "),t("li",[s._v("算术运算（"),t("code",[s._v("+")]),s._v("、"),t("code",[s._v("-")]),s._v("、"),t("code",[s._v("*")]),s._v("、"),t("code",[s._v("/")]),s._v("、"),t("code",[s._v("%")]),s._v("）")])]),s._v(" "),t("p",[s._v("除了上面的场景，还要求运算符两边的操作数不是同一类型")]),s._v(" "),t("h3",{attrs:{id:"_10-和-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-和-的区别"}},[s._v("#")]),s._v(" 10. == 和 === 的区别")]),s._v(" "),t("p",[s._v("相等操作符（==）会做类型转换，再进行值的比较，全等运算符不会做类型转换")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"55"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false，不相等，因为数据类型不同")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true，相等，因为数据类型相同值也相同")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("null")]),s._v(" 和 "),t("code",[s._v("undefined")]),s._v(" 比较，相等操作符（==）为"),t("code",[s._v("true")]),s._v("，全等为"),t("code",[s._v("false")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("null` 和 `undefined` 比较，相等操作符（==）为`true`，全等为`false\nlet result1 = (null == undefined ); // true\nlet result2 = (null  === undefined); // false\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("相等运算符隐藏的类型转换，会带来一些违反直觉的结果")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'false'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' \\t\\r\\n'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("但在比较"),t("code",[s._v("null")]),s._v("的情况的时候，我们一般使用相等操作符"),t("code",[s._v("==")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("等同于下面写法")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("使用相等操作符（==）的写法明显更加简洁了")]),s._v(" "),t("p",[t("strong",[s._v("所以，除了在比较对象属性为"),t("code",[s._v("null")]),s._v("或者"),t("code",[s._v("undefined")]),s._v("的情况下，我们可以使用相等操作符（==），其他情况建议一律使用全等操作符（===）")])]),s._v(" "),t("h3",{attrs:{id:"_11-深拷贝和浅拷贝的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-深拷贝和浅拷贝的区别"}},[s._v("#")]),s._v(" 11.深拷贝和浅拷贝的区别")]),s._v(" "),t("p",[s._v("基本类型数据保存在在栈内存中")]),s._v(" "),t("p",[s._v("引用类型数据对象保存在堆内存中，引用数据类型的变量是一个指向堆内存中实际对象的引用，存在栈中。")]),s._v(" "),t("p",[t("strong",[s._v("浅拷贝和深拷贝都只针对于引用数据类型，浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存；但深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象；")])]),s._v(" "),t("h4",{attrs:{id:"浅拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝"}},[s._v("#")]),s._v(" 浅拷贝")]),s._v(" "),t("p",[t("strong",[s._v("什么是浅拷贝？")])]),s._v(" "),t("p",[s._v("把数组/对象 "),t("strong",[s._v("第一层")]),s._v("的值，复制到新的数组/对象中。")]),s._v(" "),t("p",[s._v("这个数据有着原始数据属性值的一份精确拷贝。如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址。即"),t("strong",[s._v("浅拷贝是拷贝一层，深层次的引用类型则共享内存地址")])]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("JavaScript")]),s._v("中，存在浅拷贝的现象有：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Object.assign")])]),s._v(" "),t("li",[t("code",[s._v("Array.prototype.slice()")]),s._v(", "),t("code",[s._v("Array.prototype.concat()")])]),s._v(" "),t("li",[s._v("使用拓展运算符实现的复制")])]),s._v(" "),t("p",[t("strong",[s._v("实现方法：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510212801249.png",alt:"image-20220510212801249"}})]),s._v(" "),t("p",[s._v("区别：浅拷贝只复制对象的第一层属性、深拷贝可以对对象的属性进行递归复制；")]),s._v(" "),t("h4",{attrs:{id:"深拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[s._v("#")]),s._v(" 深拷贝")]),s._v(" "),t("p",[s._v("深拷贝开辟一个新的栈，两个对象属完成相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性")]),s._v(" "),t("p",[s._v("常见的深拷贝方式有：")]),s._v(" "),t("ul",[t("li",[s._v("_.cloneDeep()")]),s._v(" "),t("li",[s._v("jQuery.extend()")]),s._v(" "),t("li",[s._v("JSON.stringify()")]),s._v(" "),t("li",[s._v("手写循环递归")])]),s._v(" "),t("p",[t("strong",[s._v("_.cloneDeep()：")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" _ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lodash'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("c")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" _"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cloneDeep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" obj2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("jQuery.extend()")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510220706712.png",alt:"image-20220510220706712"}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const $ = require('jquery');\nconst obj1 = {\n    a: 1,\n    b: { f: { g: 1 } },\n    c: [1, 2, 3]\n};\nconst obj2 = $.extend(true, {}, obj1);\nconsole.log(obj1.b.f === obj2.b.f); // false\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("JSON.stringify()")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'大雄'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("但是这种方式存在弊端，会忽略"),t("code",[s._v("undefined")]),s._v("、"),t("code",[s._v("symbol")]),s._v("和"),t("code",[s._v("函数")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const obj = {\n    name: 'A',\n    name1: undefined,\n    name3: function() {},\n    name4:  Symbol('A')\n}\nconst obj2 = JSON.parse(JSON.stringify(obj));\nconsole.log(obj2); // {name: \"A\"}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("循环递归")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510220944521.png",alt:"image-20220510220944521"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510220921951.png",alt:"image-20220510220921951"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510220849983.png",alt:"image-20220510220849983"}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function deepClone(obj, hash = new WeakMap()) {\n  if (obj === null) return obj; // 如果是null或者undefined我就不进行拷贝操作\n  if (obj instanceof Date) return new Date(obj);\n  if (obj instanceof RegExp) return new RegExp(obj);\n  // 可能是对象或者普通的值  如果是函数的话是不需要深拷贝\n  if (typeof obj !== "object") return obj;\n  // 是对象的话就要进行深拷贝\n  if (hash.get(obj)) return hash.get(obj);\n  let cloneObj = new obj.constructor();\n  // 找到的是所属类原型上的constructor,而原型上的 constructor指向的是当前类本身\n  hash.set(obj, cloneObj);\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      // 实现一个递归拷贝\n      cloneObj[key] = deepClone(obj[key], hash);\n    }\n  }\n  return cloneObj;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[t("strong",[s._v("总结：")])]),s._v(" "),t("p",[s._v("浅拷贝和深拷贝都创建出一个新的对象，但在复制对象属性的时候，行为就不一样")]),s._v(" "),t("p",[s._v("浅拷贝只复制属性指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存，修改对象属性会影响原对象。但深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象")]),s._v(" "),t("p",[t("strong",[s._v("前提为拷贝类型为引用类型的情况下：")])]),s._v(" "),t("ul",[t("li",[s._v("浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址")]),s._v(" "),t("li",[s._v("深拷贝是递归拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址")])]),s._v(" "),t("h3",{attrs:{id:"_12-闭包的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-闭包的理解"}},[s._v("#")]),s._v(" 12.闭包的理解")]),s._v(" "),t("h4",{attrs:{id:"什么是闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[s._v("#")]),s._v(" 什么是闭包？")]),s._v(" "),t("p",[s._v("当一个"),t("strong",[s._v("嵌套的内部(子)函数")]),s._v("引用了嵌套的外部(父)函数的变量(函数)时, 就产生了闭包，创建函数，闭包让你可以在一个内层函数中访问到其外层函数的作用域。每当创建一个函数，闭包就会在函数创建的同时被创建出来，作为函数内部与外部连接起来的一座桥梁。")]),s._v(" "),t("h4",{attrs:{id:"产生闭包的条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#产生闭包的条件"}},[s._v("#")]),s._v(" 产生闭包的条件?")]),s._v(" "),t("ul",[t("li",[s._v("函数嵌套")]),s._v(" "),t("li",[s._v("内部函数引用了外部函数的数据(变量/函数)")])]),s._v(" "),t("h4",{attrs:{id:"使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),t("p",[s._v("任何闭包的使用场景都离不开这两点：")]),s._v(" "),t("ul",[t("li",[s._v("创建私有变量")]),s._v(" "),t("li",[s._v("延长变量的生命周期")]),s._v(" "),t("li",[s._v("或者说让函数外部可以操作(读写)到函数内部的数据(变量/函数)")])]),s._v(" "),t("p",[t("strong",[s._v("柯里化函数")])]),s._v(" "),t("p",[s._v("柯里化的目的在于避免频繁调用具有相同参数函数的同时，又能够轻松的重用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 假设我们有一个求长方形面积的函数\nfunction getArea(width, height) {\n    return width * height\n}\n// 如果我们碰到的长方形的宽老是10\nconst area1 = getArea(10, 20)\nconst area2 = getArea(10, 30)\nconst area3 = getArea(10, 40)\n\n// 我们可以使用闭包柯里化这个计算面积的函数\nfunction getArea(width) {\n    return height => {\n        return width * height\n    }\n}\n\nconst getTenWidthArea = getArea(10)\n// 之后碰到宽度为10的长方形就可以这样计算面积\nconst area1 = getTenWidthArea(20)\n\n// 而且如果遇到宽度偶尔变化也可以轻松复用\nconst getTwentyWidthArea = getArea(20)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[t("strong",[s._v("使用闭包模拟私有方法")])]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("JavaScript")]),s._v("中，没有支持声明私有变量，但我们可以使用闭包来模拟私有方法")]),s._v(" "),t("h3",{attrs:{id:"_13-作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-作用域"}},[s._v("#")]),s._v(" 13.作用域")]),s._v(" "),t("p",[s._v("作用域，即变量（变量作用域又称上下文）和函数生效（能被访问）的区域或集合")]),s._v(" "),t("p",[s._v("这就说明我们在全局是无法获取到（闭包除外）函数内部的变量")]),s._v(" "),t("p",[t("strong",[s._v("在当前作用域中找不到某一变量时，向外层作用域寻找（就近原则）")])]),s._v(" "),t("p",[s._v("我们一般将作用域分成：")]),s._v(" "),t("ul",[t("li",[s._v("全局作用域")]),s._v(" "),t("li",[s._v("函数作用域")]),s._v(" "),t("li",[s._v("块级作用域")])]),s._v(" "),t("h4",{attrs:{id:"全局作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[s._v("#")]),s._v(" 全局作用域")]),s._v(" "),t("p",[s._v("任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问")]),s._v(" "),t("h4",{attrs:{id:"函数作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域"}},[s._v("#")]),s._v(" 函数作用域")]),s._v(" "),t("p",[s._v("函数作用域也叫局部作用域，如果一个变量是在函数内部声明的它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问")]),s._v(" "),t("h4",{attrs:{id:"块级作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[s._v("#")]),s._v(" 块级作用域")]),s._v(" "),t("p",[s._v("ES6引入了"),t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("关键字,和"),t("code",[s._v("var")]),s._v("关键字不同，在大括号中使用"),t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("声明的变量存在于块级作用域中。在大括号之外不能访问这些变量")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n  // 块级作用域中的变量\n  let greeting = 'Hello World!';\n  var lang = 'English';\n  console.log(greeting); // Prints 'Hello World!'\n}\n// 变量 'English'\nconsole.log(lang);\n// 报错：Uncaught ReferenceError: greeting is not defined\nconsole.log(greeting);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h4",{attrs:{id:"作用域与执行上下文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域与执行上下文"}},[s._v("#")]),s._v(" 作用域与执行上下文")]),s._v(" "),t("ul",[t("li",[s._v("区别1\n"),t("ul",[t("li",[s._v("全局作用域之外，每个函数都会创建自己的作用域，作用域在"),t("strong",[s._v("函数定义时")]),s._v("就已经确定了。而不是在函数调用时")]),s._v(" "),t("li",[s._v("全局执行上下文是在"),t("strong",[s._v("全局作用域确定之后, js代码马上执行之前创建")])]),s._v(" "),t("li",[s._v("函数执行上下文是在"),t("strong",[s._v("调用函数时")]),s._v(", 函数体代码执行之前创建")])])]),s._v(" "),t("li",[s._v("区别2\n"),t("ul",[t("li",[s._v("作用域是"),t("strong",[s._v("静态")]),s._v("的, 只要函数定义好了就一直存在, 且不会再变化")]),s._v(" "),t("li",[s._v("上下文环境是"),t("strong",[s._v("动态")]),s._v("的。函数执行上下文在调用函数时创建, 函数调用结束时上下文环境就会被"),t("strong",[s._v("自动释放")])])])]),s._v(" "),t("li",[s._v("联系\n"),t("ul",[t("li",[s._v("执行上下文(对象)是从属于所在的作用域")]),s._v(" "),t("li",[s._v("全局上下文环境==>全局作用域")]),s._v(" "),t("li",[s._v("函数上下文环境==>对应的函数使用域")])])])]),s._v(" "),t("h4",{attrs:{id:"静态作用域-词法作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态作用域-词法作用域"}},[s._v("#")]),s._v(" 静态作用域(词法作用域)")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510224254952.png",alt:"image-20220510224254952"}})]),s._v(" "),t("h4",{attrs:{id:"作用域链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[s._v("#")]),s._v(" 作用域链")]),s._v(" "),t("p",[s._v("当在"),t("code",[s._v("Javascript")]),s._v("中使用一个变量的时候，首先"),t("code",[s._v("Javascript")]),s._v("引擎会尝试在当前作用域下去寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推直到找到该变量或是已经到了全局作用域")]),s._v(" "),t("p",[s._v("如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错")]),s._v(" "),t("h3",{attrs:{id:"_14-原型和原型链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-原型和原型链"}},[s._v("#")]),s._v(" 14.原型和原型链")]),s._v(" "),t("h4",{attrs:{id:"原型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[s._v("#")]),s._v(" 原型")]),s._v(" "),t("p",[s._v("原型实际上就是一个普通对象，继承于 Object 类，由 js 自动创建并依附于每个函数身上，原型在 JavaScript 对象系统中的位置和关系如图所示。")]),s._v(" "),t("h3",{attrs:{id:"_15-防抖和节流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-防抖和节流"}},[s._v("#")]),s._v(" 15.防抖和节流")]),s._v(" "),t("p",[s._v("**节流:**在规定的间隔时间范围内不会重复触发回调，只有大于这个时间间隔才会触发回调，把频繁触发变为少量触发（用户操作很频繁，但是把频繁的操作变为少量的操作，可以给浏览器充裕的时间解析代码）\n**防抖:**前面的所有的触发都被取消，最后一次执行在规定的时间之后才会触发，也就是说如果连续快速的触发只会执行一次（用户操作很频繁，但是只执行一次）")]),s._v(" "),t("h3",{attrs:{id:"_16-for-in和for-of区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-for-in和for-of区别"}},[s._v("#")]),s._v(" 16."),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/282961866",target:"_blank",rel:"noopener noreferrer"}},[s._v("for...in和for...of区别"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_17-构造函数的继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-构造函数的继承"}},[s._v("#")]),s._v(" 17.构造函数的继承")]),s._v(" "),t("p",[s._v("可以分成两步实现。第一步是在子类的构造函数中，调用父类的构造函数。第二步，是让子类的原型指向父类的原型，这样子类就可以继承父类原型。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Sub(value){\n\tsuper.call(this)\n\tthis.prop = value\n}\n//Sub是子类的构造函数，this是子类的实例。在实例上调用父类的构造函数Super，就会让子类实例具有父类实例的属性。\n\nSub.prototype = Object.create(Super.prototype);\nSub.prototype.constructor = Sub;\n//Sub.prototype是子类的原型，要将它赋值为Object.create(Super.prototype)，而不是直接等于Super.prototype。否则后面两行对Sub.prototype的操作，会连父类的原型Super.prototype一起修改掉。\n\n//另外一种写法是Sub.prototype等于一个父类实例。\nSub.prototype = new Super();\n//上面这种写法也有继承的效果，但是子类会具有父类实例的方法。有时，这可能不是我们需要的，所以不推荐使用这种写法。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("多继承：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//JavaScript 不提供多重继承功能，即不允许一个对象同时继承多个对象。但是，可以通过变通方法，实现这个功能。\nfunction M1() {\n  this.hello = 'hello';\n}\n\nfunction M2() {\n  this.world = 'world';\n}\n\nfunction S() {\n  M1.call(this);\n  M2.call(this);\n}\n\n// 继承 M1\nS.prototype = Object.create(M1.prototype);\n// 继承链上加入 M2\nObject.assign(S.prototype, M2.prototype);\n\n// 指定构造函数\nS.prototype.constructor = S;\n\nvar s = new S();\ns.hello // 'hello'\ns.world // 'world'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("h3",{attrs:{id:"let有没有变量提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let有没有变量提升"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/qq_58875046/article/details/123067627",target:"_blank",rel:"noopener noreferrer"}},[s._v("let有没有变量提升？"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"vue2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue2"}},[s._v("#")]),s._v(" vue2")]),s._v(" "),t("h3",{attrs:{id:"_1-v-if和v-for不要一起使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-if和v-for不要一起使用"}},[s._v("#")]),s._v(" 1.v-if和v-for不要一起使用")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510002447533.png",alt:"image-20220510002447533"}})]),s._v(" "),t("p",[s._v("因为v-for执行优先级比v-if高，会先执行v-for循环遍历，再执行v-if。")]),s._v(" "),t("p",[s._v("解决方案：v-if绑定在父元素或子元素上")]),s._v(" "),t("h3",{attrs:{id:"_2-父子组件通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-父子组件通信"}},[s._v("#")]),s._v(" 2.父子组件通信")]),s._v(" "),t("h4",{attrs:{id:"_1-props-emit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-props-emit"}},[s._v("#")]),s._v(" 1.props|$emit")]),s._v(" "),t("ul",[t("li",[s._v("父向子传递：父组件在掉用子组件的位置绑定自定义属性，将值传给子组件，子组件使用props接收")])]),s._v(" "),t("p",[s._v("父组件：")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510003303872.png",alt:"image-20220510003303872"}})]),s._v(" "),t("p",[s._v("子组件:")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510003333308.png",alt:"image-20220510003333308"}})]),s._v(" "),t("ul",[t("li",[s._v("子向父传递：通过$emit")])]),s._v(" "),t("p",[s._v("子组件通过$emit绑定方法,将数据作为参数传递给父组件，父组件中监听这个事件，通过这个方法获取传递来的数据")]),s._v(" "),t("p",[s._v("子组件：")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510003620386.png",alt:"image-20220510003620386"}})]),s._v(" "),t("p",[s._v("父组件：")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510003935115.png",alt:"image-20220510003935115"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510003852511.png",alt:"image-20220510003852511"}})]),s._v(" "),t("h4",{attrs:{id:"_2-slot插槽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-slot插槽"}},[s._v("#")]),s._v(" 2.slot插槽")]),s._v(" "),t("p",[s._v("父组件：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<template>\n  <div id="app">\n    <current-user>\n      \x3c!-- v-slot 获取插槽的数据 --\x3e\n      <template v-slot:default="slotProps">\n        {{ slotProps.user.age }}\n      </template>\n\n      \x3c!--\n      <template v-slot:default="{ user }">\n        {{ user.age }}\n      </template> \n      --\x3e\n    </current-user>\n  </div>\n</template>\n\n<script>\nimport CurrentUser from "./components/CurrentUser.vue";\n\nexport default {\n  name: "App",\n  components: {\n    CurrentUser,\n  },\n};\n<\/script>\n\n<style>\n</style>\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("子组件：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("<template>\n  <div>\n      <slot :user=\"user\">\n          {{user.name}}\n      </slot>\n  </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            user:{\n                name:'make',\n                age:20\n            }\n        }\n    }\n}\n<\/script>\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h3",{attrs:{id:"_3-兄弟组件通信-事件总线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-兄弟组件通信-事件总线"}},[s._v("#")]),s._v(" 3.兄弟组件通信(事件总线)")]),s._v(" "),t("p",[s._v("App.vue")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510005907425.png",alt:"image-20220510005907425"}})]),s._v(" "),t("p",[s._v("定义event-bus.js，暴露eventBus")]),s._v(" "),t("p",[s._v("每个vue实例都会有$emit(),也有监听自定义事件的$on方法")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510010040109.png",alt:"image-20220510010040109"}})]),s._v(" "),t("p",[s._v("组件通过eventBus.$emit()绑定事件，将数据作为参数传递")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510010451854.png",alt:"image-20220510010451854"}})]),s._v(" "),t("p",[s._v("兄弟组件在mounted通过eventBus.$on()监听传值的兄弟组件绑定的事件。为了避免内存泄漏，应该在beforeDestory，通过eventBus.$off解绑事件的监听")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510011035204.png",alt:"image-20220510011035204"}})]),s._v(" "),t("h3",{attrs:{id:"_4-父子组件生命周期执行顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-父子组件生命周期执行顺序"}},[s._v("#")]),s._v(" 4.父子组件生命周期执行顺序")]),s._v(" "),t("p",[t("strong",[s._v("vue组件的生命周期")])]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/11370083-f279314aef6741db.jpg",alt:"img"}})]),s._v(" "),t("p",[t("em",[t("strong",[s._v("父子组件生命周期执行顺序：")])])]),s._v(" "),t("p",[t("strong",[s._v("加载渲染过程")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("父beforeCreate->父created->父beforeMount->子beforeCreate->子created->子beforeMount->子mounted->父mounted\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("更新过程")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("父beforeUpdate->子beforeUpdate->子updated->父updated\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("销毁过程")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("父beforeDestroy->子beforeDestroy->子destroyed->父destroyed\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("常用钩子简易版")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("父create->子created->子mounted->父mounted\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_5-nexttick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-nexttick"}},[s._v("#")]),s._v(" 5.nextTick()")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6844904090657357837",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入浅出理解vm.$nextTick - 掘金 (juejin.cn)"),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"一、nexttick是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、nexttick是什么"}},[s._v("#")]),s._v(" 一、NextTick是什么")]),s._v(" "),t("p",[s._v("官方对其的定义")]),s._v(" "),t("blockquote",[t("p",[s._v("在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM")])]),s._v(" "),t("p",[s._v("可以理解成，"),t("code",[s._v("Vue")]),s._v(" 在更新 "),t("code",[s._v("DOM")]),s._v(" 时是异步执行的。当数据发生变化，"),t("code",[s._v("Vue")]),s._v("将开启一个异步更新队列，视图需要等队列中所有数据变化完成之后，再统一进行更新。如果我们一直修改相同数据，异步操作队列还会进行去重。vue在做异步渲染时是批量进行的。")]),s._v(" "),t("h3",{attrs:{id:"_6-动态组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-动态组件"}},[s._v("#")]),s._v(" 6.动态组件")]),s._v(" "),t("p",[s._v("有时候要根据后端的请求渲染动态的页面")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<template>\n  <div id="app">\n    <div v-for="item in productData" :key="item.id">\n      \x3c!-- 根据is绑定组件名 --\x3e\n      <component :is="`My${item.type}`"></component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Text from "./components/MyText.vue";\nimport Image from "./components/MyImage.vue";\nexport default {\n  name: "App",\n  data() {\n    return {\n      is: "",\n      productData: [\n        {\n          id: 1,\n          type: "Image",\n        },\n        {\n          id: 2,\n          type: "Image",\n        },\n        {\n          id: 3,\n          type: "Text",\n        },\n        {\n          id: 4,\n          type: "Text",\n        },\n      ],\n    };\n  },\n  components: {\n    MyText: Text,\n    MyImage: Image,\n  },\n};\n<\/script>\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("h3",{attrs:{id:"_7-异步组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-异步组件"}},[s._v("#")]),s._v(" 7.异步组件")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<template>\n  <div id="app">\n    <Test v-if="show"></Test>\n    <button @click="show = !show">显示|隐藏test组件</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "App",\n  data() {\n    return {\n      show: true,\n    };\n  },\n  components: {\n    // 类似于按需加载，不会在第一次渲染页面时就把test的组件内容加载进去，提高性能\n    Test: () => import(/* webpackChunkName:test */ "./components/Test"),\n  },\n};\n<\/script>\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h3",{attrs:{id:"_8-keep-alive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-keep-alive"}},[s._v("#")]),s._v(" 8.keep-alive")]),s._v(" "),t("p",[s._v("用vue开发的webapp,多个组件共用一个窗口，当我们切换路由时，切出路由组件会销毁，所有列表页进入详情页列表页会销毁，重新回到列表页，列表页组件会重新加载。")]),s._v(" "),t("p",[s._v("使用keep-alive包裹的组件不会频繁创建和销毁，而是将创建的结果缓存，使用时从缓存拿出。")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:/typora-user-images/image-20220510114045130.png",alt:"image-20220510114045130"}})]),s._v(" "),t("h3",{attrs:{id:"_9-mixin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-mixin"}},[s._v("#")]),s._v(" 9.mixin")]),s._v(" "),t("p",[s._v("抽离公共逻辑")]),s._v(" "),t("h2",{attrs:{id:"es6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[s._v("#")]),s._v(" ES6")]),s._v(" "),t("h3",{attrs:{id:"_1-尾调用优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-尾调用优化"}},[s._v("#")]),s._v(" 1.尾调用优化")]),s._v(" "),t("p",[s._v("函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数"),t("code",[s._v("A")]),s._v("的内部调用函数"),t("code",[s._v("B")]),s._v("，那么在"),t("code",[s._v("A")]),s._v("的调用帧上方，还会形成一个"),t("code",[s._v("B")]),s._v("的调用帧。等到"),t("code",[s._v("B")]),s._v("运行结束，将结果返回到"),t("code",[s._v("A")]),s._v("，"),t("code",[s._v("B")]),s._v("的调用帧才会消失。如果函数"),t("code",[s._v("B")]),s._v("内部还调用函数"),t("code",[s._v("C")]),s._v("，那就还有一个"),t("code",[s._v("C")]),s._v("的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。")]),s._v(" "),t("p",[s._v("尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置，内部变量等信息都不会再用到，只要直接用内层函数的调用帧，取代外层函数的调用帧即可。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function f() {\n  let m = 1;\n  let n = 2;\n  return g(m + n);\n}\nf();\n\n// 等同于\nfunction f() {\n  return g(3);\n}\nf();\n\n// 等同于\ng(3);\n\n//如果函数g不是尾调用，函数f就需要保存内部变量m和n的值、g的调用位置等信息。但由于调用g之后，函数f就结束了，所以执行到最后一步，完全可以删除f(x)的调用帧，只保留g(3)的调用帧。\n//这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function addOne(a){\n  var one = 1;\n  function inner(b){\n    return b + one;\n  }\n  return inner(a);\n}\n//上面的函数不会进行尾调用优化，因为内层函数inner用到了外层函数addOne的内部变量one。\n//注意，目前只有 Safari 浏览器支持尾调用优化，Chrome 和 Firefox 都不支持。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("尾递归：")])]),s._v(" "),t("p",[s._v("函数调用自身，称为递归。如果尾调用自身，就称为尾递归。")]),s._v(" "),t("p",[s._v("递归非常消耗内存，因为需要同时保存很多调用帧，很容易发生栈溢出错误。但是对于尾递归来说，由于只存在一个调用帧，所以永远不会发生栈溢出错误。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function factorial(n) {\n  if (n === 1) return 1;\n  return n * factorial(n - 1);\n}\n\nfactorial(5) // 120\n//上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function factorial(n, total) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5, 1) // 120\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 亦是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出（或者层层递归造成的超时），相对节省内存。")]),s._v(" "),t("p",[s._v("ES6 的尾调用优化只在严格模式下开启，正常模式是无效的。")]),s._v(" "),t("p",[s._v("这是因为在正常模式下，函数内部有两个变量，可以跟踪函数的调用栈。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("func.arguments")]),s._v("：返回调用时函数的参数。")]),s._v(" "),t("li",[t("code",[s._v("func.caller")]),s._v("：返回调用当前函数的那个函数。")])]),s._v(" "),t("p",[s._v("尾调用优化发生时，函数的调用栈会改写，因此上面两个变量就会失真。严格模式禁用这两个变量，所以尾调用模式仅在严格模式下生效。")]),s._v(" "),t("h3",{attrs:{id:"_2-拓展运算符和array-from-的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-拓展运算符和array-from-的不同"}},[s._v("#")]),s._v(" 2.拓展运算符和Array.from()的不同")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//拓展运算符和Array.from()都可以将\n//拓展运算符背后调用的是遍历器接口(Symbol.iterator),如果与一个对象没有部署这个接口，就无法转换。\n//Array.from()方法还支持类似数组的对象。所谓类似数组的对象，本质特征只有一点,就是必须有length属性。\n//因此，任何有length属性的对象，都可以通过Array.from()方法转为数组\n\nlet obj = {\n    0:1,\n    1:2,\n    2:3,\n    3:4,\n    length:4\n}\nconsole.log(Array.from(obj)) //Array(4) [1, 2, 3, 4]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"es6的遍历对象的属性的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6的遍历对象的属性的方法"}},[s._v("#")]),s._v(" ES6的遍历对象的属性的方法")]),s._v(" "),t("p",[s._v("ES6 一共有 5 种方法可以遍历对象的属性。")]),s._v(" "),t("p",[t("strong",[s._v("（1）for...in")])]),s._v(" "),t("p",[t("code",[s._v("for...in")]),s._v("循环遍历对象自身的和继承的可枚举属性（不含 Symbol 属性）。")]),s._v(" "),t("p",[t("strong",[s._v("（2）Object.keys(obj)")])]),s._v(" "),t("p",[t("code",[s._v("Object.keys")]),s._v("返回一个数组，包括对象自身的（不含继承的）所有可枚举属性（不含 Symbol 属性）的键名。")]),s._v(" "),t("p",[t("strong",[s._v("（3）Object.getOwnPropertyNames(obj)")])]),s._v(" "),t("p",[t("code",[s._v("Object.getOwnPropertyNames")]),s._v("返回一个数组，包含对象自身的所有属性（不含 Symbol 属性，但是包括不可枚举属性）的键名。")]),s._v(" "),t("p",[t("strong",[s._v("（4）Object.getOwnPropertySymbols(obj)")])]),s._v(" "),t("p",[t("code",[s._v("Object.getOwnPropertySymbols")]),s._v("返回一个数组，包含对象自身的所有 Symbol 属性的键名。")]),s._v(" "),t("p",[t("strong",[s._v("（5）Reflect.ownKeys(obj)")])]),s._v(" "),t("p",[t("code",[s._v("Reflect.ownKeys")]),s._v("返回一个数组，包含对象自身的（不含继承的）所有键名，不管键名是 Symbol 或字符串，也不管是否可枚举。")]),s._v(" "),t("p",[s._v("以上的 5 种方法遍历对象的键名，都遵守同样的属性遍历的次序规则。")]),s._v(" "),t("ul",[t("li",[s._v("首先遍历所有数值键，按照数值升序排列。")]),s._v(" "),t("li",[s._v("其次遍历所有字符串键，按照加入时间升序排列。")]),s._v(" "),t("li",[s._v("最后遍历所有 Symbol 键，按照加入时间升序排列。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Reflect.ownKeys({ [Symbol()]:0, b:0, 10:0, 2:0, a:0 })\n// ['2', '10', 'b', 'a', Symbol()]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面代码中，"),t("code",[s._v("Reflect.ownKeys")]),s._v("方法返回一个数组，包含了参数对象的所有属性。这个数组的属性次序是这样的，首先是数值属性"),t("code",[s._v("2")]),s._v("和"),t("code",[s._v("10")]),s._v("，其次是字符串属性"),t("code",[s._v("b")]),s._v("和"),t("code",[s._v("a")]),s._v("，最后是 Symbol 属性。")]),s._v(" "),t("h3",{attrs:{id:"es5和es6继承的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es5和es6继承的区别"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://www.jb51.net/article/219798.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("ES5和ES6继承的区别"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[s._v("#")]),s._v(" 网络")]),s._v(" "),t("p",[s._v("1."),t("a",{attrs:{href:"https://blog.csdn.net/Newbie___/article/details/107212575",target:"_blank",rel:"noopener noreferrer"}},[s._v("大厂常问：输入URL到显示页面的全过程（敲详细）_七钥的博客-CSDN博客_浏览器输入"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_1-什么是http-http-和-https-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是http-http-和-https-的区别"}},[s._v("#")]),s._v(" 1.什么是HTTP? HTTP 和 HTTPS 的区别?")]),s._v(" "),t("h4",{attrs:{id:"_1-http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-http"}},[s._v("#")]),s._v(" 1.http")]),s._v(" "),t("p",[t("code",[s._v("HTTP")]),s._v(" (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.vue-js.com/fda119b0-b20b-11eb-85f6-6fac77c0c9b3.png",alt:"img"}})]),s._v(" "),t("p",[s._v("http是一个传输协议，即将数据由A传到B或将B传输到A，并且 A 与 B 之间能够存放很多第三方，如： A<=>X<=>Y<=>Z<=>B。传输的是完整的、有意义的数据，如HTML 文件, 图片文件, 查询结果等超文本，能够被上层应用识别。在实际应用中，"),t("code",[s._v("HTTP")]),s._v("常被用于在"),t("code",[s._v("Web")]),s._v("浏览器和网站服务器之间传递信息，以明文方式发送内容，不提供任何方式的数据加密。")]),s._v(" "),t("p",[s._v("特点如下：")]),s._v(" "),t("ul",[t("li",[s._v("支持客户/服务器模式")]),s._v(" "),t("li",[s._v("简单快速：客户向服务器请求服务时，只需传送请求方法和路径。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快")]),s._v(" "),t("li",[s._v("灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记")]),s._v(" "),t("li",[s._v("无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间")]),s._v(" "),t("li",[s._v("无状态：HTTP协议无法根据之前的状态进行本次的请求处理")])]),s._v(" "),t("h4",{attrs:{id:"_2-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-https"}},[s._v("#")]),s._v(" 2.https")]),s._v(" "),t("p",[t("code",[s._v("HTTP")]),s._v("传递信息是以明文的形式发送内容，这并不安全。而"),t("code",[s._v("HTTPS")]),s._v("出现正是为了解决"),t("code",[s._v("HTTP")]),s._v("不安全的特性。")]),s._v(" "),t("p",[s._v("为了保证这些隐私数据能加密传输，让"),t("code",[s._v("HTTP")]),s._v("运行安全的"),t("code",[s._v("SSL/TLS")]),s._v("协议上，即 HTTPS = HTTP + SSL/TLS，通过 "),t("code",[s._v("SSL")]),s._v("证书来验证服务器的身份，并为浏览器和服务器之间的通信进行加密。")]),s._v(" "),t("p",[t("code",[s._v("SSL")]),s._v(" 协议位于"),t("code",[s._v("TCP/IP")]),s._v(" 协议与各种应用层协议之间，浏览器和服务器在使用 "),t("code",[s._v("SSL")]),s._v(" 建立连接时需要选择一组恰当的加密算法来实现安全通信，为数据通讯提供安全支持")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:%5Ctypora-user-images%5Cimage-20220606144810958.png",alt:"image-20220606144810958"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"D:%5Ctypora-user-images%5Cimage-20220606144822478.png",alt:"image-20220606144822478"}})]),s._v(" "),t("ul",[t("li",[s._v("首先客户端通过URL访问服务器建立SSL连接")]),s._v(" "),t("li",[s._v("服务端收到客户端请求后，会将网站支持的证书信息（证书中包含公钥）传送一份给客户端")]),s._v(" "),t("li",[s._v("客户端的服务器开始协商SSL连接的安全等级，也就是信息加密的等级")]),s._v(" "),t("li",[s._v("客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站")]),s._v(" "),t("li",[s._v("服务器利用自己的私钥解密出会话密钥")]),s._v(" "),t("li",[s._v("服务器利用会话密钥加密与客户端之间的通信")])]),s._v(" "),t("h4",{attrs:{id:"_3-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[s._v("#")]),s._v(" 3.区别")]),s._v(" "),t("ul",[t("li",[s._v("HTTPS是HTTP协议的安全版本，HTTP协议的数据传输是明文的，是不安全的，HTTPS使用了SSL/TLS协议进行了加密处理，相对更安全")]),s._v(" "),t("li",[s._v("HTTP 和 HTTPS 使用连接方式不同，默认端口也不一样，HTTP是80，HTTPS是443")]),s._v(" "),t("li",[s._v("HTTPS 由于需要设计加密以及多次握手，性能方面不如 HTTP")]),s._v(" "),t("li",[s._v("HTTPS需要SSL，SSL 证书需要钱，功能越强大的证书费用越高")])]),s._v(" "),t("p",[s._v("面试官好，我叫师钰博，来自河南师范大学，我来应聘的是职位是前端开发实习工程师。")]),s._v(" "),t("p",[s._v("首先我简单介绍一下在校情况 在校期间主修了数据结构 计算机网络 计算机组成员原理 操作系统，java，web开发等课程。在校期间我表现比较优异，也获得了不错的成绩，随着课程的结束，我也想要寻找一份实习工作，从实践中锻炼自己，这也是我今天坐在这的原因")]),s._v(" "),t("p",[s._v("大二时我开始明确自己的方向-前端开发，因为对前端感兴趣，所以在课下可以做到认真自学， 在学习的过程中走了很多弯路，也收获了自己的学习方法，从helloworld到可以做出完整的项目，自己也收获了很多。")]),s._v(" "),t("p",[s._v("说实话我对于HR这样的问题并没有一个很好的回答模板")]),s._v(" "),t("p",[s._v("a：这个职位未来的发展空间、公司或我的上司如何对员工进行绩效考评？我的汇报线是怎么样的？")]),s._v(" "),t("p",[s._v("b：公司是否有针对技术、行业或商务方面的培训制度、平时是否有团建交流活动")]),s._v(" "),t("p",[s._v("c：询问公司的未来发展规划")])])}),[],!1,null,null,null);t.default=e.exports}}]);